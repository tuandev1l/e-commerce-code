services:
  postgres:
    image: postgres
    container_name: ending_project
    restart: 'always'
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./docker/postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.9.20-management-alpine
    container_name: rabbitmq
    ports:
      - ${RABBITMQ_MAIN_PORT}:5672
      - ${RABBITMQ_SUB_PORT}:15672
    volumes:
      - ./docker/rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:6.2.5-alpine
    restart: 'always'
    container_name: lms_redis
    ports:
      - ${REDIS_PORT}:6379
    env_file:
      - .env
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION}
#    container_name: elasticsearch
#    restart: always
#    #    volumes:
#    #      - ./docker/elastic_data:/usr/share/elasticsearch/data
#    environment:
#      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
#      discovery.type: single-node
#      xpack.security.enrollment.enabled: true
#      xpack.security.enabled: true
#
#    env_file:
#      - .env
#    ports:
#      - ${ELASTIC_PORT}:9200
#    networks:
#      - elastic
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:${ES_VERSION}
#    container_name: lms_kibana
#    restart: always
#    env_file:
#      - .env
#    ports:
#      - ${KIBANA_PORT}:5601
#    environment:
#      ELASTICSEARCH_URL: http://elasticsearch:9200
#      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: 17490b004b3d14959644ad26d145c69c
#      XPACK_REPORTING_ENCRYPTIONKEY: 3ea4bfb67afc69d7b46f348833bd2b65
#      XPACK_SECURITY_ENCRYPTIONKEY: 6cab6fe5de846b69a173f1b73611e402
#      #      ELASTICSEARCH_USERNAME: ${ELASTIC_USERNAME}
#      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
#    depends_on:
#      - elasticsearch
#    networks:
#      - elastic

volumes:
  postgres_data:
  rabbitmq_data:
  elastic_data:

networks:
  elastic: